{"version":3,"sources":["app.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","$","on","e","this","toggleClass","Scrollbar","use","OverscrollPlugin","scrlbr","init","document","querySelector","custom","damping","hdrfx","lerp","a","b","n","addListener","status","offset","style","top","y","left","x","querySelectorAll","forEach","elem","el","mX","pageX","mY","pageY","item","customDist","data","centerX","width","centerY","height","deltaX","Math","floor","deltaY","mouseX","mouseY","sqrt","pow","calculateDistance","TweenMax","to","scale","addClass","removeClass","magnetize","Cursor","bind","cursor","mouseCurrent","mouseLast","rAF","undefined","value","_this","fn","clientX","clientY","transform","concat","requestAnimationFrame","run","_requestAnimationFrame","apply","arguments","toString","window","addEventListener","getMousePosition","addEvents","hover","perfData","performance","timing","EstimatedTime","loadEventEnd","navigationStart","time","parseInt","animate","setTimeout","renderer","scene","camera","sphereBg","nucleus","stars","controls","timeout_Debounce","container","getElementById","noise","SimplexNoise","onWindowResize","aspect","clientWidth","clientHeight","updateProjectionMatrix","setSize","cnvscntnr","THREE","Scene","PerspectiveCamera","offsetWidth","offsetHeight","position","set","directionalLight","DirectionalLight","add","ambientLight","AmbientLight","WebGLRenderer","antialias","canvas","alpha","setPixelRatio","devicePixelRatio","OrbitControls","domElement","autoRotate","autoRotateSpeed","minDistance","maxDistance","enablePan","loader","TextureLoader","textureSphereBg","load","texturenucleus","textureStar","texture1","texture2","texture4","anisotropy","icosahedronGeometry","IcosahedronGeometry","lambertMaterial","MeshPhongMaterial","map","Mesh","geometrySphereBg","SphereBufferGeometry","materialSphereBg","MeshBasicMaterial","side","BackSide","starsGeometry","Geometry","particleStar","randomPointSphere","velocity","MathUtils","randInt","startX","startY","startZ","z","vertices","push","starsMaterial","PointsMaterial","size","color","transparent","opacity","blending","AdditiveBlending","createStars","texture","total","pointGeometry","pointMaterial","particles","Points","radius","theta","PI","random","phi","acos","dx","sin","cos","dy","dz","Vector3","depthWrite","geometry","v","Date","now","normalize","distance","parameters","noise3D","multiplyScalar","verticesNeedUpdate","normalsNeedUpdate","computeVertexNormals","computeFaceNormals","rotation","update","render","clearTimeout","particlesJS","jQuery"],"mappings":"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","file":"app.js","sourcesContent":["(function ($) {\r\n  $(function () {\r\n    \"use strict\";\r\n\r\n    $(\".hamburger\").on(\"click\", function (e) {\r\n      $(this).toggleClass(\"opened\");\r\n      $(\".header__navbar\").toggleClass(\"show\");\r\n    });\r\n  });\r\n\r\n  const ovrscrll = Scrollbar.use(OverscrollPlugin);\r\n  const scrlbr = Scrollbar.init(document.querySelector(\"#main\"), custom);\r\n\r\n  const custom = {\r\n    damping: 0.95,\r\n  };\r\n\r\n  var hdrfx = document.querySelector(\".header\");\r\n  scrlbr.addListener(function (status) {\r\n    var offset = status.offset;\r\n    hdrfx.style.top = offset.y + \"px\";\r\n    hdrfx.style.left = offset.x + \"px\";\r\n  });\r\n\r\n  /* --------------------------- cursor magnet --------------------------- */\r\n  var cerchio = document.querySelectorAll(\r\n    \".header__brand, .hamburger, .link__button, .custom__button\"\r\n  );\r\n  cerchio.forEach(function (elem) {\r\n    $(document).on(\"mousemove touch\", function (e) {\r\n      magnetize(elem, e);\r\n    });\r\n  });\r\n  function magnetize(el, e) {\r\n    var mX = e.pageX,\r\n      mY = e.pageY;\r\n    const item = $(el);\r\n    const customDist = item.data(\"dist\") * 70 || 120;\r\n    const centerX = item.offset().left + item.width() / 2;\r\n    const centerY = item.offset().top + item.height() / 2;\r\n    var deltaX = Math.floor(centerX - mX) * -0.35;\r\n    var deltaY = Math.floor(centerY - mY) * -0.35;\r\n    var distance = calculateDistance(item, mX, mY);\r\n    if (distance < customDist) {\r\n      TweenMax.to(item, 0.5, {\r\n        y: deltaY,\r\n        x: deltaX,\r\n        scale: 1,\r\n      });\r\n      item.addClass(\"magnet\");\r\n    } else {\r\n      TweenMax.to(item, 0.7, {\r\n        y: 0,\r\n        x: 0,\r\n        scale: 1,\r\n      });\r\n      item.removeClass(\"magnet\");\r\n    }\r\n  }\r\n  function calculateDistance(elem, mouseX, mouseY) {\r\n    return Math.floor(\r\n      Math.sqrt(\r\n        Math.pow(mouseX - (elem.offset().left + elem.width() / 2), 2) +\r\n          Math.pow(mouseY - (elem.offset().top + elem.height() / 2), 2)\r\n      )\r\n    );\r\n  }\r\n  function lerp(a, b, n) {\r\n    return (1 - n) * a + n * b;\r\n  }\r\n\r\n  /* --------------------------- cursor init --------------------------- */\r\n  class Cursor {\r\n    constructor() {\r\n      this.bind();\r\n      this.cursor = document.querySelector(\".cursor__conn\");\r\n      this.mouseCurrent = {\r\n        x: 0,\r\n        y: 0,\r\n      };\r\n      this.mouseLast = {\r\n        x: this.mouseCurrent.x,\r\n        y: this.mouseCurrent.y,\r\n      };\r\n      this.rAF = undefined;\r\n    }\r\n    bind() {\r\n      [\"getMousePosition\", \"run\"].forEach(\r\n        (fn) => (this[fn] = this[fn].bind(this))\r\n      );\r\n    }\r\n    getMousePosition(e) {\r\n      this.mouseCurrent = {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      };\r\n    }\r\n    run() {\r\n      this.mouseLast.x = lerp(this.mouseLast.x, this.mouseCurrent.x, 0.95);\r\n      this.mouseLast.y = lerp(this.mouseLast.y, this.mouseCurrent.y, 0.95);\r\n      this.mouseLast.x = Math.floor(this.mouseLast.x * 100) / 100;\r\n      this.mouseLast.y = Math.floor(this.mouseLast.y * 100) / 100;\r\n      this.cursor.style.transform = `translate3d(${this.mouseLast.x}px, ${this.mouseLast.y}px, 0)`;\r\n      this.rAF = requestAnimationFrame(this.run);\r\n    }\r\n    requestAnimationFrame() {\r\n      this.rAF = requestAnimationFrame(this.run);\r\n    }\r\n    addEvents() {\r\n      window.addEventListener(\"mousemove\", this.getMousePosition, true);\r\n    }\r\n    on() {\r\n      this.addEvents();\r\n      this.requestAnimationFrame();\r\n    }\r\n    init() {\r\n      this.on();\r\n    }\r\n  }\r\n  if ($(\".cursor__conn\").length > 0) {\r\n    const cursor = new Cursor();\r\n    cursor.init();\r\n\r\n    /* --------------------------- cursor conditions --------------------------- */\r\n    $(\".carousel-image-box\").hover(function () {\r\n      $(\".cursor\").toggleClass(\"drag\");\r\n    });\r\n    $(\".header__brand, .header__items\").hover(function () {\r\n      $(\".cursor\").toggleClass(\"navlinks\");\r\n    });\r\n    $(\".link__button, .custom__button\").hover(function () {\r\n      $(\".cursor\").toggleClass(\"button\");\r\n    });\r\n    $(\".header__brand\").hover(function () {\r\n      $(\".cursor\").toggleClass(\"brand\");\r\n    });\r\n    $(\".hamburger\").hover(function () {\r\n      $(\".cursor\").toggleClass(\"show__hamburger\");\r\n    });\r\n  }\r\n\r\n  /* --------------------------- preloader --------------------------- */\r\n  var width = 100,\r\n    perfData = window.performance.timing, // The PerformanceTiming interface represents timing-related performance information for the given page.\r\n    EstimatedTime = -(perfData.loadEventEnd - perfData.navigationStart),\r\n    time = parseInt((EstimatedTime / 1000) % 20) * 20;\r\n  $(\".loadbar\").animate(\r\n    {\r\n      width: width + \"%\",\r\n    },\r\n    time\r\n  );\r\n  function animateValue(id, start, end, duration) {\r\n    var range = end - start,\r\n      current = start,\r\n      increment = end > start ? 1 : -1,\r\n      stepTime = Math.abs(Math.floor(duration / range)),\r\n      obj = $(id);\r\n    var timer = setInterval(function () {\r\n      current += increment;\r\n      $(obj).text(current + \"%\");\r\n      if (current == end) {\r\n        clearInterval(timer);\r\n      }\r\n    }, stepTime);\r\n  }\r\n  setTimeout(function () {\r\n    $(\"body\").addClass(\"page-loaded\");\r\n  }, time);\r\n\r\n  let renderer,\r\n    scene,\r\n    camera,\r\n    sphereBg,\r\n    nucleus,\r\n    stars,\r\n    controls,\r\n    container = document.getElementById(\"cnvscntnr\"),\r\n    timeout_Debounce,\r\n    noise = new SimplexNoise(),\r\n    cameraSpeed = 0,\r\n    blobScale = 3;\r\n\r\n  init();\r\n  animate();\r\n\r\n  function init() {\r\n    const cnvscntnr = document.getElementById(\"cnvscntnr\");\r\n\r\n    scene = new THREE.Scene();\r\n    camera = new THREE.PerspectiveCamera(\r\n      55,\r\n      cnvscntnr.offsetWidth / cnvscntnr.offsetHeight,\r\n      0.01,\r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 230);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(\"#fff\", 2);\r\n    directionalLight.position.set(0, 50, -20);\r\n    scene.add(directionalLight);\r\n\r\n    let ambientLight = new THREE.AmbientLight(\"#ffffff\", 1);\r\n    ambientLight.position.set(0, 20, 20);\r\n    scene.add(ambientLight);\r\n\r\n    renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      canvas: document.querySelector(\"canvas\"),\r\n      alpha: true,\r\n    });\r\n\r\n    renderer.setSize(cnvscntnr.offsetWidth, cnvscntnr.offsetHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    //OrbitControl\r\n    controls = new THREE.OrbitControls(camera, renderer.domElement);\r\n    controls.autoRotate = true;\r\n    controls.autoRotateSpeed = 0.25;\r\n    controls.minDistance = 540.25;\r\n    controls.maxDistance = 540.25;\r\n    controls.enablePan = true;\r\n\r\n    const loader = new THREE.TextureLoader();\r\n    const textureSphereBg = loader.load(\r\n      \"https://i.ibb.co/4gHcRZD/bg3-je3ddz.jpg\"\r\n    );\r\n    const texturenucleus = loader.load(\r\n      \"https://i.ibb.co/hcN2qXk/star-nc8wkw.jpg\"\r\n    );\r\n    const textureStar = loader.load(\"https://i.ibb.co/ZKsdYSz/p1-g3zb2a.png\");\r\n    const texture1 = loader.load(\"https://i.ibb.co/F8by6wW/p2-b3gnym.png\");\r\n    const texture2 = loader.load(\"https://i.ibb.co/yYS2yx5/p3-ttfn70.png\");\r\n    const texture4 = loader.load(\"https://i.ibb.co/yWfKkHh/p4-avirap.png\");\r\n\r\n    /*  Nucleus  */\r\n    texturenucleus.anisotropy = 16;\r\n    let icosahedronGeometry = new THREE.IcosahedronGeometry(30, 10);\r\n    let lambertMaterial = new THREE.MeshPhongMaterial({ map: texturenucleus });\r\n    nucleus = new THREE.Mesh(icosahedronGeometry, lambertMaterial);\r\n    scene.add(nucleus);\r\n\r\n    /*    Sphere  Background   */\r\n    textureSphereBg.anisotropy = 16;\r\n    let geometrySphereBg = new THREE.SphereBufferGeometry(150, 40, 40);\r\n    let materialSphereBg = new THREE.MeshBasicMaterial({\r\n      side: THREE.BackSide,\r\n      map: textureSphereBg,\r\n    });\r\n    sphereBg = new THREE.Mesh(geometrySphereBg, materialSphereBg);\r\n    scene.add(sphereBg);\r\n\r\n    /* moving stars */\r\n    let starsGeometry = new THREE.Geometry();\r\n    for (let i = 0; i < 50; i++) {\r\n      let particleStar = randomPointSphere(150);\r\n      particleStar.velocity = THREE.MathUtils.randInt(50, 200);\r\n      particleStar.startX = particleStar.x;\r\n      particleStar.startY = particleStar.y;\r\n      particleStar.startZ = particleStar.z;\r\n      starsGeometry.vertices.push(particleStar);\r\n    }\r\n\r\n    let starsMaterial = new THREE.PointsMaterial({\r\n      size: 5,\r\n      color: \"#ffffff\",\r\n      transparent: true,\r\n      opacity: 0.8,\r\n      map: textureStar,\r\n      blending: THREE.AdditiveBlending,\r\n    });\r\n\r\n    starsMaterial.depthWrite = false;\r\n    stars = new THREE.Points(starsGeometry, starsMaterial);\r\n    scene.add(stars);\r\n\r\n    /* fixed stars */\r\n    function createStars(texture, size, total) {\r\n      let pointGeometry = new THREE.Geometry();\r\n      let pointMaterial = new THREE.PointsMaterial({\r\n        size: size,\r\n        map: texture,\r\n        blending: THREE.AdditiveBlending,\r\n      });\r\n\r\n      for (let i = 0; i < total; i++) {\r\n        let radius = THREE.MathUtils.randInt(149, 70);\r\n        let particles = randomPointSphere(radius);\r\n        pointGeometry.vertices.push(particles);\r\n      }\r\n      return new THREE.Points(pointGeometry, pointMaterial);\r\n    }\r\n\r\n    scene.add(createStars(texture1, 15, 20));\r\n    scene.add(createStars(texture2, 5, 5));\r\n    scene.add(createStars(texture4, 7, 5));\r\n\r\n    function randomPointSphere(radius) {\r\n      let theta = 2 * Math.PI * Math.random();\r\n      let phi = Math.acos(2 * Math.random() - 1);\r\n      let dx = 0 + radius * Math.sin(phi) * Math.cos(theta);\r\n      let dy = 0 + radius * Math.sin(phi) * Math.sin(theta);\r\n      let dz = 0 + radius * Math.cos(phi);\r\n      return new THREE.Vector3(dx, dy, dz);\r\n    }\r\n  }\r\n\r\n  function animate() {\r\n    /* stars animation */\r\n    stars.geometry.vertices.forEach(function (v) {\r\n      v.x += (0 - v.x) / v.velocity;\r\n      v.y += (0 - v.y) / v.velocity;\r\n      v.z += (0 - v.z) / v.velocity;\r\n      v.velocity -= 0.3;\r\n      if (v.x <= 5 && v.x >= -5 && v.z <= 5 && v.z >= -5) {\r\n        v.x = v.startX;\r\n        v.y = v.startY;\r\n        v.z = v.startZ;\r\n        v.velocity = THREE.MathUtils.randInt(50, 300);\r\n      }\r\n    });\r\n\r\n    /* nucleus animation */\r\n    nucleus.geometry.vertices.forEach(function (v) {\r\n      let time = Date.now();\r\n      v.normalize();\r\n      let distance =\r\n        nucleus.geometry.parameters.radius +\r\n        noise.noise3D(\r\n          v.x + time * 0.0005,\r\n          v.y + time * 0.0003,\r\n          v.z + time * 0.0008\r\n        ) *\r\n          blobScale;\r\n      v.multiplyScalar(distance);\r\n    });\r\n\r\n    nucleus.geometry.verticesNeedUpdate = true;\r\n    nucleus.geometry.normalsNeedUpdate = true;\r\n    nucleus.geometry.computeVertexNormals();\r\n    nucleus.geometry.computeFaceNormals();\r\n    nucleus.rotation.y += 0.002;\r\n\r\n    /* sphere background animation */\r\n    sphereBg.rotation.x += 0.002;\r\n    sphereBg.rotation.y += 0.002;\r\n    sphereBg.rotation.z += 0.002;\r\n\r\n    controls.update();\r\n    stars.geometry.verticesNeedUpdate = true;\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(animate);\r\n  }\r\n\r\n  /* resize */\r\n  window.addEventListener(\"resize\", () => {\r\n    clearTimeout(timeout_Debounce);\r\n    timeout_Debounce = setTimeout(onWindowResize, 70);\r\n  });\r\n\r\n  function onWindowResize() {\r\n    camera.aspect = container.clientWidth / container.clientHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n  }\r\n\r\n  particlesJS.load(\"particles-js\", \"particles.json\", function () {});\r\n})(jQuery);\r\n"]}